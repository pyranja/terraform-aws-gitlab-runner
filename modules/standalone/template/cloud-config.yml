#cloud-config
---
package_update: true
package_upgrade: all

timezone: "UTC"
write_files:
  - path: "/etc/gitlab-runner/template.toml"
    permissions: "0644"
    owner: "root:root"
    content: |
      [[runners]]
      executor = "docker"
      limit = ${max_concurrent_jobs}
      [runners.docker]
      image = "docker"
      pull_policy = "always"
      wait_for_services_timeout = 30
      disable_cache = true
      privileged = false
      shm_size = 0
      [runners.cache]
      Type = "s3"
      Shared = true
      [runners.cache.s3]
      BucketName = "${cache_bucket}"
      BucketLocation = "${cache_region}"
  - path: "/etc/gitlab-runner/config.toml"
    permissions: "0644"
    owner: "root:root"
    content: |
      listen_address = "0.0.0.0:9252"
      concurrent = ${max_concurrent_jobs}
      check_interval = 0
      log_level = "info"
      [session_server]
      session_timeout = 1800
  - path: "/bin/register-runner.sh"
    permissions: "0755"
    owner: "root:root"
    content: |
      #!/usr/bin/env bash
      set -x
      # fetch registration token from secret
      REGISTRATION_TOKEN=$(aws --region ${region} secretsmanager get-secret-value --secret-id ${token_secret} --output text --query 'SecretString')
      # register the runner with the gitlab instance
      gitlab-runner register \
        --non-interactive \
        --config '/etc/gitlab-runner/config.toml' \
        --template-config '/etc/gitlab-runner/template.toml' \
        --url "${gitlab_url}" \
        --registration-token "$${REGISTRATION_TOKEN}" \
        --executor "docker" \
        --docker-image "docker:latest" \
        --docker-volumes "/var/run/docker.sock:/var/run/docker.sock" \
        --description "${runner_name}" \
        --tag-list "${runner_tags}" \
        --run-untagged="false" \
        --locked="false" \
        --access-level="not_protected"
  - path: "/etc/td-agent-bit/td-agent-bit.conf"
    permissions: "0644"
    owner: "root:root"
    content: |
      [SERVICE]
          Flush        5
          Daemon       Off
          Log_Level    info
          HTTP_Server  Off
          HTTP_Listen  0.0.0.0
          HTTP_Port    2020
      [INPUT]
          Name  systemd
          Tag   journald.*
      [OUTPUT]
          Name              cloudwatch_logs
          Match             *
          region            ${region}
          log_group_name    /gitlab/runner/${runner_name}
          log_stream_name   journald
  - path: "/etc/docker/daemon.json"
    permissions: "0644"
    owner: "root:root"
    content: |
      {
        "default-address-pools": [
          { "base": "${docker_default_cidr}", "size": 24 }
        ]
      }
  - path: "/etc/systemd/system/docker-prune.service"
    permissions: "0644"
    owner: "root:root"
    content: |
      [Unit]
      Description=Prune docker state
      [Service]
      Type=oneshot
      ExecStart=/usr/bin/docker system prune --force --all --volumes
  - path: "/etc/systemd/system/docker-prune.timer"
    permissions: "0644"
    owner: "root:root"
    content: |
      [Unit]
      Description=Nightly docker prune
      [Timer]
      OnCalendar=daily
      # spread out over 2h
      RandomizedDelaySec=7200
      Persistent=true
      [Install]
      WantedBy=timers.target
  - path: "/bin/termination-handler.sh"
    permissions: "0755"
    owner: "root:root"
    content: |
      #!/usr/bin/env bash
      set -x
      echo "cleaning up as: $(id)"
      # cleanup a gitlab runner - executed on EC2 termination
      # unregister gitlab runner process
      systemctl stop gitlab-runner
      gitlab-runner unregister --config '/etc/gitlab-runner/config.toml' --all-runners
      systemctl status gitlab-runner || true

yum_repos:
  gitlab-runner:
    enabled: true
    baseurl: 'https://packages.gitlab.com/runner/gitlab-runner/el/8/$basearch'
    gpgcheck: false
    repo_gpgcheck: true
    gpgkey: 'https://packages.gitlab.com/runner/gitlab-runner/gpgkey'
    sslverify: true
    sslcacert: '/etc/pki/tls/certs/ca-bundle.crt'
  gitlab-runner-source:
    enabled: true
    baseurl: 'https://packages.gitlab.com/runner/gitlab-runner/el/8/SRPMS'
    gpgcheck: false
    repo_gpgcheck: true
    gpgkey: 'https://packages.gitlab.com/runner/gitlab-runner/gpgkey'
    sslverify: true
    sslcacert: '/etc/pki/tls/certs/ca-bundle.crt'
  td-agent-bit:
    enabled: true
    baseurl: 'https://packages.fluentbit.io/amazonlinux/2/$basearch/'
    gpgcheck: true
    repo_gpgcheck: false
    gpgkey: 'https://packages.fluentbit.io/fluentbit.key'
    sslverify: true
    sslcacert: '/etc/pki/tls/certs/ca-bundle.crt'

packages:
  - docker
  - gitlab-runner
  - td-agent-bit

runcmd:
  - [ systemctl, daemon-reload ]
  # ensure log exporter is running
  - [ systemctl, restart, td-agent-bit ]
  # gitlab-runner must wait until docker-machine is installed and initialized
  - [ systemctl, stop, gitlab-runner ]
  # grant gitlab runner access to docker daemon
  - [ usermod, --append, --groups, docker, gitlab-runner ]
  - [ systemctl, restart, docker ]
  # all pre-requisites are met now - register gitlab runner and start to pick up jobs
  - [ /bin/register-runner.sh ]
  - [ systemctl, restart, gitlab-runner ]
