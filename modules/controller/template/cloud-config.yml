#cloud-config
---
package_update: true
package_upgrade: all

timezone: "UTC"
write_files:
  - path: "/etc/gitlab-runner/config.toml"
    permissions: "0644"
    owner: "root:root"
    content: |
      concurrent = ${max_worker}
      check_interval = 0
      listen_address = "0.0.0.0:9252"
      log_level = "info"

      [[runners]]
        name = "${name}"
        url = "${gitlab_url}"
        token = "${gitlab_token}"
        executor = "docker+machine"
        limit = ${max_worker}
        [runners.docker]
          image = "docker"
          pull_policy = "always"
          volumes = ["/var/run/docker.sock:/var/run/docker.sock", "/cache"]
          wait_for_services_timeout = 30
          disable_cache = true
          privileged = false
          shm_size = 0
        [runners.machine]
          IdleCount = ${min_worker}
          IdleTime = 1800
          MaxBuilds = ${max_worker}
          MachineDriver = "amazonec2"
          MachineName = "gl-${name}-worker-%s"
          MachineOptions = [
            "amazonec2-region=${region}",
            "amazonec2-instance-type=${instance_type}",
            "amazonec2-vpc-id=${vpc_id}",
            "amazonec2-subnet-id=${subnet_id}",
            "amazonec2-zone=${zone}",
            "amazonec2-use-private-address=true",
            "amazonec2-private-address-only=true",
            "amazonec2-tags=Provisioner,gitlab",
            "amazonec2-request-spot-instance=true",
            "amazonec2-spot-price=",
          ]
        [runners.cache]
          Type = "s3"
          Shared = true
          [runners.cache.s3]
            BucketName = "${cache_bucket}"
            BuckerLocation = "${cache_region}"
  - path: "/etc/td-agent-bit/td-agent-bit.conf"
    permission: "0644"
    owner: "root:root"
    content: |
      [SERVICE]
          Flush        5
          Daemon       Off
          Log_Level    info
          HTTP_Server  Off
          HTTP_Listen  0.0.0.0
          HTTP_Port    2020
      [INPUT]
          Name  systemd
          Tag   journald.*
      [OUTPUT]
          Name              cloudwatch_logs
          Match             *
          region            ${region}
          log_group_name    /gitlab/runner/${name}
          log_stream_name   journald

yum_repos:
  gitlab-runner:
    enabled: true
    baseurl: 'https://packages.gitlab.com/runner/gitlab-runner/el/8/$basearch'
    gpgcheck: false
    repo_gpgcheck: true
    gpgkey: 'https://packages.gitlab.com/runner/gitlab-runner/gpgkey'
    sslverify: true
    sslcacert: '/etc/pki/tls/certs/ca-bundle.crt'
  gitlab-runner-source:
    enabled: true
    baseurl: 'https://packages.gitlab.com/runner/gitlab-runner/el/8/SRPMS'
    gpgcheck: false
    repo_gpgcheck: true
    gpgkey: 'https://packages.gitlab.com/runner/gitlab-runner/gpgkey'
    sslverify: true
    sslcacert: '/etc/pki/tls/certs/ca-bundle.crt'
  td-agent-bit:
    enabled: true
    baseurl: 'https://packages.fluentbit.io/amazonlinux/2/$basearch/'
    gpgcheck: true
    repo_gpgcheck: false
    gpgkey: 'https://packages.fluentbit.io/fluentbit.key'
    sslverify: true
    sslcacert: '/etc/pki/tls/certs/ca-bundle.crt'

packages:
  - docker
  - gitlab-runner
  - td-agent-bit

runcmd:
  # ensure log exporter is running
  - [ systemctl, restart, td-agent-bit ]
  # install docker machine
  - [ sh, -c, "curl --location https://gitlab-docker-machine-downloads.s3.amazonaws.com/v0.16.2-gitlab.12/docker-machine-Linux-x86_64 > /bin/docker-machine" ]
  - [ chmod, +x, /bin/docker-machine ]
  # grant gitlab runner access to docker daemon
  - [ usermod, --append, --groups, docker, gitlab-runner ]
  - [ systemctl, restart, docker ]
  - [ systemctl, restart, gitlab-runner ]
